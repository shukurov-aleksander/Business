<?xml version="1.0" encoding="UTF-8"?>
<databaseChangeLog xmlns="http://www.liquibase.org/xml/ns/dbchangelog"
                   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                   xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog https://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-3.8.xsd">
    <changeSet id="1" author="Aleksander.shukurov@gmail.com">
        <sql>
            WITH series AS (SELECT GENERATE_SERIES(1, 1000) sery),
                 count_series AS (SELECT COUNT(*) AS quantity
                                  FROM series)
            INSERT
            INTO companies (company_name, tax_number, user_id, is_government_agency)
            SELECT 'Company name №' || CAST(s.sery AS VARCHAR(3)) || ' .inc',
                   lpad(s.sery::VARCHAR, 16, '0'),
                   FLOOR(RANDOM() * (cs.quantity - 1) + 1),
                   CASE
                       WHEN s.sery % 100 = 0 THEN TRUE
                       ELSE FALSE
                       END
            FROM series s,
                 count_series cs
        </sql>
        <rollback>
            <sql>
                DELETE FROM companies
            </sql>
        </rollback>
    </changeSet>
    <changeSet id="2" author="Aleksander.shukurov@gmail.com">
        <sql>
            WITH series AS (SELECT GENERATE_SERIES(1, 1000) sery)
            INSERT
            INTO services  (service_name, sum, service_description)
            SELECT 'Service name №' || CAST(s.sery AS VARCHAR),
                   FLOOR(RANDOM() * (150000 - 1) + 1),
                   'Service description of the service name №' || CAST(s.sery AS VARCHAR)
            FROM series s
        </sql>
        <rollback>
            <sql>
                DELETE FROM services
            </sql>
        </rollback>
    </changeSet>
    <changeSet id="3" author="Aleksander.shukurov@gmail.com">
        <sql>
            WITH series AS (SELECT GENERATE_SERIES(1, 1000) sery)
            INSERT
            INTO orders (order_status, created_at_utc, completed_at_utc)
            SELECT CASE
                       WHEN s.sery % 4 = 0 THEN 'remittance'::order_status_enum
                       WHEN s.sery % 3 = 0  THEN 'barter'::order_status_enum
                       WHEN s.sery % 2 = 0  THEN 'outsourcing'::order_status_enum
                       ELSE 'purchase'::order_status_enum
                       END,
                   NOW() - FLOOR((RANDOM() * (1000 - 500) + 500)) * INTERVAL '1 day', NOW() - FLOOR((RANDOM() * (499 - 1) + 1)) * INTERVAL '1 day'
            FROM series s
        </sql>
        <rollback>
            <sql>
                DELETE FROM orders
            </sql>
        </rollback>
    </changeSet>
    <changeSet id="4" author="Aleksander.shukurov@gmail.com">
        <sql>
            INSERT INTO contents (quantity, service_id)
            SELECT FLOOR(RANDOM() * (20000 - 1) + 1),
                   FLOOR(RANDOM() * ((SELECT COUNT(*) FROM services) - 1) + 1)
            FROM (SELECT GENERATE_SERIES(1, 1000)) AS series
        </sql>
        <rollback>
            <sql>
                DELETE FROM contents
            </sql>
        </rollback>
    </changeSet>
    <changeSet id="5" author="Aleksander.shukurov@gmail.com">
        <sql>
            INSERT INTO order_content_links (order_id, content_id)
            SELECT FLOOR(RANDOM() * ((SELECT COUNT(*) FROM ORDERS) - 1) + 1),
                   FLOOR(RANDOM() * ((SELECT COUNT(*) FROM CONTENTS) - 1) + 1)
            FROM (SELECT GENERATE_SERIES(1, 1000)) AS series ON CONFLICT DO NOTHING
        </sql>
        <rollback>
            <sql>
                DELETE FROM order_content_links
            </sql>
        </rollback>
    </changeSet>
    <changeSet id="6" author="Aleksander.shukurov@gmail.com">
        <sql>
            WITH series AS (SELECT GENERATE_SERIES(1, 1000) sery)
            INSERT
            INTO details  (company_id, order_id, operation_type)
            SELECT FLOOR(RANDOM() * ((SELECT COUNT(*) FROM companies) - 1) + 1),
                   FLOOR(RANDOM() * ((SELECT COUNT(*) FROM orders) - 1) + 1),
                   CASE
                       WHEN s.sery % 4 = 0 THEN 'processing'::operation_type_enum
                       WHEN s.sery % 3 = 0  THEN 'completed'::operation_type_enum
                       ELSE 'created'::operation_type_enum
                       END
            FROM series s ON CONFLICT DO NOTHING
        </sql>
        <rollback>
            <sql>
                DELETE FROM details
            </sql>
        </rollback>
    </changeSet>
    <changeSet id="7" author="Aleksander.shukurov@gmail.com">
        <sql>
            INSERT INTO documents (order_id, document_content)
            SELECT FLOOR(RANDOM() * ((SELECT COUNT(*) FROM orders) - 1) + 1),
                   LPAD('content from document consist of', (FLOOR(RANDOM() * ((248 - 32) + 32))):: INTEGER,
                        'different document content and another ')
            FROM (SELECT GENERATE_SERIES(1, 1000)) AS series ON CONFLICT DO NOTHING
        </sql>
        <rollback>
            <sql>
                DELETE FROM documents
            </sql>
        </rollback>
    </changeSet>
    <changeSet id="8" author="Aleksander.shukurov@gmail.com">
        <sql>
            INSERT INTO storages (quantity, company_id, service_id)
            SELECT FLOOR(random() * (1000 - 1) + 1),
                   FLOOR(random() * ((SELECT COUNT(*) FROM companies) - 1) + 1),
                   FLOOR(random() * ((SELECT COUNT(*) FROM services) - 1) + 1)
            FROM (SELECT GENERATE_SERIES(1, 1000)) AS series ON CONFLICT DO NOTHING
        </sql>
        <rollback>
            <sql>
                DELETE FROM storages
            </sql>
        </rollback>
    </changeSet>
</databaseChangeLog>